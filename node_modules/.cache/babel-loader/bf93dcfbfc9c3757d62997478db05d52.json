{"ast":null,"code":"var _jsxFileName = \"/home/esraamamoun5/esraa/memory-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img/helmet-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/potion-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/ring-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/scroll-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/shield-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/sword-1.png\",\n  matched: false\n}];\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          prevCards.map(card => {\n            if (card.src === choiceOne.crc) {\n              return { ...card,\n                matched: true\n              };\n            } else {\n              console.log('hjhjhjhj');\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        resetTurn();\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  console.log(cards);\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurn => prevTurn + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"/JnteANCPxCZNpFpO1ZAWIjzFcc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/esraamamoun5/esraa/memory-game/src/App.js"],"names":["useEffect","useState","SingleCard","cardImages","matched","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","src","prevCards","crc","console","log","resetTurn","prevTurn"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCards';\n\n\n\nconst cardImages = [\n    { \"src\": \"/img/helmet-1.png\", matched: false },\n    { \"src\": \"/img/potion-1.png\", matched: false },\n    { \"src\": \"/img/ring-1.png\", matched: false },\n    { \"src\": \"/img/scroll-1.png\", matched: false },\n    { \"src\": \"/img/shield-1.png\", matched: false },\n    { \"src\": \"/img/sword-1.png\", matched: false }\n]\n\nfunction App() {\n\n    const [cards, setCards] = useState([]);\n    const [turns, setTurns] = useState(0);\n    const [choiceOne, setChoiceOne] = useState(null);\n    const [choiceTwo, setChoiceTwo] = useState(null);\n\n    const shuffleCards = () => {\n        const shuffledCards = [...cardImages, ...cardImages]\n            .sort(() => Math.random() - 0.5)\n            .map((card) => ({ ...card, id: Math.random() }));\n\n        setCards(shuffledCards);\n        setTurns(0);\n    }\n\n\n    const handleChoice = (card) => {\n        choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n    }\n\n    useEffect(() => {\n        \n        if(choiceOne && choiceTwo) {\n\n            if(choiceOne.src === choiceTwo.src) {\n                setCards(prevCards => {\n                    prevCards.map(card => {\n                        if (card.src === choiceOne.crc) {\n                           \n                            return {...card, matched: true}\n                        } else {\n                            console.log('hjhjhjhj')\n                            return card\n                        }\n                    })\n                })\n                resetTurn();\n            } else {\n                resetTurn();\n            }\n        }\n    }, [choiceOne, choiceTwo]);\n\n    console.log(cards);\n\n    \n    const resetTurn = () => {\n        setChoiceOne(null);\n        setChoiceTwo(null);\n        setTurns(prevTurn => prevTurn + 1);\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>Magic Match</h1>\n            <button onClick={shuffleCards}>New Game</button>\n            \n            <div className=\"card-grid\">\n                {cards.map(card => (\n                    <SingleCard \n                        key={card.id} \n                        card={card}\n                        handleChoice={handleChoice}\n                    />\n                ))}\n\n            </div>\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}