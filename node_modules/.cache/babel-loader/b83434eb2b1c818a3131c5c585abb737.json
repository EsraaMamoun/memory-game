{"ast":null,"code":"import _objectSpread from\"/home/esraamamoun5/esraa/memory-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/esraamamoun5/esraa/memory-game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import'./App.css';import SingleCard from'./components/SingleCards';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var cardImages=[{\"src\":\"/img/helmet-1.png\",matched:false},{\"src\":\"/img/potion-1.png\",matched:false},{\"src\":\"/img/ring-1.png\",matched:false},{\"src\":\"/img/scroll-1.png\",matched:false},{\"src\":\"/img/shield-1.png\",matched:false},{\"src\":\"/img/sword-1.png\",matched:false}];function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cards=_useState2[0],setCards=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),turns=_useState4[0],setTurns=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),choiceOne=_useState6[0],setChoiceOne=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),choiceTwo=_useState8[0],setChoiceTwo=_useState8[1];var shuffleCards=function shuffleCards(){var shuffledCards=[].concat(cardImages,cardImages).sort(function(){return Math.random()-0.5;}).map(function(card){return _objectSpread(_objectSpread({},card),{},{id:Math.random()});});setCards(shuffledCards);setTurns(0);};var handleChoice=function handleChoice(card){choiceOne?setChoiceTwo(card):setChoiceOne(card);};useEffect(function(){if(choiceOne&&choiceTwo){if(choiceOne.src===choiceTwo.src){setCards(function(prevCards){return prevCards.map(function(card){if(card.src===choiceOne.src){return _objectSpread(_objectSpread({},card),{},{matched:true});}else{return card;}});});resetTurn();}else{setTimeout(function(){return resetTurn();},1000);}}},[choiceOne,choiceTwo]);console.log(cards);var resetTurn=function resetTurn(){setChoiceOne(null);setChoiceTwo(null);setTurns(function(prevTurn){return prevTurn+1;});};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Magic Match\"}),/*#__PURE__*/_jsx(\"button\",{onClick:shuffleCards,children:\"New Game\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card-grid\",children:cards.map(function(card){return/*#__PURE__*/_jsx(SingleCard,{card:card,handleChoice:handleChoice,flipped:card===choiceOne||card===choiceTwo||card.matched},card.id);})})]});}export default App;","map":{"version":3,"sources":["/home/esraamamoun5/esraa/memory-game/src/App.js"],"names":["useEffect","useState","SingleCard","cardImages","matched","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","src","prevCards","resetTurn","setTimeout","console","log","prevTurn"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCards';\n\n\n\nconst cardImages = [\n    { \"src\": \"/img/helmet-1.png\", matched: false },\n    { \"src\": \"/img/potion-1.png\", matched: false },\n    { \"src\": \"/img/ring-1.png\", matched: false },\n    { \"src\": \"/img/scroll-1.png\", matched: false },\n    { \"src\": \"/img/shield-1.png\", matched: false },\n    { \"src\": \"/img/sword-1.png\", matched: false }\n]\n\nfunction App() {\n\n    const [cards, setCards] = useState([]);\n    const [turns, setTurns] = useState(0);\n    const [choiceOne, setChoiceOne] = useState(null);\n    const [choiceTwo, setChoiceTwo] = useState(null);\n\n    const shuffleCards = () => {\n        const shuffledCards = [...cardImages, ...cardImages]\n            .sort(() => Math.random() - 0.5)\n            .map((card) => ({ ...card, id: Math.random() }));\n\n        setCards(shuffledCards);\n        setTurns(0);\n    }\n\n\n    const handleChoice = (card) => {\n        choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n    }\n\n    useEffect(() => {\n        \n        if(choiceOne && choiceTwo) {\n\n            if(choiceOne.src === choiceTwo.src) {\n                setCards(prevCards => {\n                    return prevCards.map(card => {\n                        if (card.src === choiceOne.src) {\n                            return {...card, matched: true}\n                        } else {\n                            return card\n                        }\n                    })\n                })\n                resetTurn();\n            } else {\n                setTimeout(() => resetTurn(), 1000)\n            }\n        }\n    }, [choiceOne, choiceTwo]);\n\n    console.log(cards);\n\n    \n    const resetTurn = () => {\n        setChoiceOne(null);\n        setChoiceTwo(null);\n        setTurns(prevTurn => prevTurn + 1);\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>Magic Match</h1>\n            <button onClick={shuffleCards}>New Game</button>\n            \n            <div className=\"card-grid\">\n                {cards.map(card => (\n                    <SingleCard \n                        key={card.id} \n                        card={card}\n                        handleChoice={handleChoice}\n                        flipped={card === choiceOne || card === choiceTwo || card.matched}\n                    />\n                ))}\n\n            </div>\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}